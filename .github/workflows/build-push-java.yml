name: Build and Push Docker Image for Java App

on:
  workflow_call:
    secrets:
      GCP_SA_CREDENTIALS:
        required: true
      GCP_PROJECT:
        required: true
    inputs:
      IMAGE_NAME:
        type: string
        required: true
      JAVA:
        type: boolean
        default: false
      PROJECT_VERSION:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configurar Maven settings.xml
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_PACKAGES_PAT: ${{ secrets.PACKAGE_MANAGER_PAT }}
        run: |
          mkdir -p ~/.m2
          cat << EOF > ~/.m2/settings.xml
          <?xml version="1.0" encoding="UTF-8"?>
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                    http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>ecommerce-pom-releases</id>
                    <name>GitHub EcommerceDevops Apache Maven Packages</name>
                    <url>https://maven.pkg.github.com/EcommerceDevops/ecommerce-parent</url>
                    <releases>
                      <enabled>true</enabled>
                    </releases>
                    <snapshots>
                      <enabled>true</enabled>
                    </snapshots>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <servers>
              <server>
                <id>ecommerce-pom-releases</id>
                <username>${GITHUB_ACTOR}</username>
                <password>${GITHUB_PACKAGES_PAT}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build Java app with Maven Wrapper
        if: inputs.JAVA == true
        run: |
          if [ -f "./mvnw" ]; then
            chmod +x ./mvnw
            ./mvnw clean package
          else
            echo "No se encontró ./mvnw, omitiendo compilación."
          fi

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_CREDENTIALS }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "${{ secrets.GCP_PROJECT }}"

      - name: "Use gcloud CLI"
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev

      - name: Set image tags
        run: |
          TIMESTAMP=$(date -u +'%Y%m%d-%H%M%S')
          # Reemplaza '/' por '-' en el nombre de la rama para evitar errores en el tag
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '/' '-')
          echo "IMAGE_TAG=${BRANCH_NAME}-${TIMESTAMP}" >> $GITHUB_ENV

      - name: Build Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          echo "Building image with tags:"
          echo "- latest"
          echo "- ${{ inputs.PROJECT_VERSION }}"
          echo "- ${{ env.IMAGE_TAG }}"
          docker build --build-arg PROJECT_VERSION=1.0.0 \
            -t $IMAGE_PATH:latest \
            -t $IMAGE_PATH:${{ inputs.PROJECT_VERSION }} \
            -t $IMAGE_PATH:${{ env.IMAGE_TAG }} .

      - name: List Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          echo "Available images:"
          docker images | grep ${{ inputs.IMAGE_NAME }}

      - name: Push Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          echo "Pushing image with tags:"
          echo "- ${{ inputs.PROJECT_VERSION }}"
          docker push $IMAGE_PATH:${{ inputs.PROJECT_VERSION }}
          echo "- ${{ env.IMAGE_TAG }}"
          docker push $IMAGE_PATH:${{ env.IMAGE_TAG }}