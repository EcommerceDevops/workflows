name: Build and Push Docker Image for Java App

on:
  workflow_call:
    secrets:
      GCP_SA_CREDENTIALS:
        required: true
      GCP_PROJECT:
        required: true
      # Se a침aden los secrets usados en el workflow para que sean declarados
      PACKAGE_MANAGER_PAT:
        required: false
      GCP_REGISTRY_ZONE:
        required: true
    inputs:
      IMAGE_NAME:
        type: string
        required: true
      JAVA:
        type: boolean
        default: false

      PROJECT_VERSION:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        with:
          ref: ${{ inputs.PROJECT_VERSION }}

      - name: Configurar Maven settings.xml
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_PACKAGES_PAT: ${{ secrets.PACKAGE_MANAGER_PAT }}
        run: |
          # --- TU SCRIPT DE MAVEN SE MANTIENE EXACTAMENTE IGUAL ---
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 
          https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>ecommerce-pom-releases</id>
                    <name>GitHub EcommerceDevops Apache Maven Packages</name>
                    <url>https://maven.pkg.github.com/EcommerceDevops/ecommerce-parent</url>
                    <releases>
                      <enabled>true</enabled>
                    </releases>
                    <snapshots>
                      <enabled>true</enabled>
                    </snapshots>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <servers>
              <server>
                <id>ecommerce-pom-releases</id>
                <username>${GITHUB_ACTOR}</username>  
                <password>${GITHUB_PACKAGES_PAT}</password>  
              </server>
            </servers>
          </settings>
          EOF

      - name: Build Java app with Maven Wrapper
        if: inputs.JAVA == true
        run: |
          if [ -f "./mvnw" ]; then
            chmod +x ./mvnw
            # CAMBIO 2: Se pasa la versi칩n al build de Maven para consistencia.
            ./mvnw clean package -Drevision=${{ inputs.PROJECT_VERSION }}
          else
            echo "No se encontr칩 ./mvnw, omitiendo compilaci칩n."
          fi

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_CREDENTIALS }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "${{ secrets.GCP_PROJECT }}"

      - name: "Use gcloud CLI"
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev



      - name: Build Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          docker build --build-arg PROJECT_VERSION=${{ inputs.PROJECT_VERSION }} -t "${IMAGE_PATH}:${{ inputs.PROJECT_VERSION }}" -t "${IMAGE_PATH}:latest" .

      - name: Push Docker images

        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          docker push "${IMAGE_PATH}:${{ inputs.PROJECT_VERSION }}"
          docker push "${IMAGE_PATH}:latest"